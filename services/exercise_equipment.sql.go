// Code generated by sqlc. DO NOT EDIT.
// source: exercise_equipment.sql

package services

import (
	"context"

	"github.com/google/uuid"
)

const createExerciseEquipment = `-- name: CreateExerciseEquipment :one
INSERT INTO exercise_equipment (
    exercise_id,
    equipment_id
) VALUES (
  $1, $2
) RETURNING id, created_at, updated_at, exercise_id, equipment_id
`

type CreateExerciseEquipmentParams struct {
	ExerciseID  uuid.UUID `json:"exercise_id"`
	EquipmentID uuid.UUID `json:"equipment_id"`
}

func (q *Queries) CreateExerciseEquipment(ctx context.Context, arg CreateExerciseEquipmentParams) (ExerciseEquipment, error) {
	row := q.db.QueryRowContext(ctx, createExerciseEquipment, arg.ExerciseID, arg.EquipmentID)
	var i ExerciseEquipment
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExerciseID,
		&i.EquipmentID,
	)
	return i, err
}

const getExerciseEquipmentById = `-- name: GetExerciseEquipmentById :one
SELECT id, created_at, updated_at, exercise_id, equipment_id from exercise_equipment where id = $1
`

func (q *Queries) GetExerciseEquipmentById(ctx context.Context, id uuid.UUID) (ExerciseEquipment, error) {
	row := q.db.QueryRowContext(ctx, getExerciseEquipmentById, id)
	var i ExerciseEquipment
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExerciseID,
		&i.EquipmentID,
	)
	return i, err
}

const updateExerciseEquipmentById = `-- name: UpdateExerciseEquipmentById :one
UPDATE exercise_equipment SET exercise_id = $1, equipment_id = $2 WHERE id = $3 RETURNING id, created_at, updated_at, exercise_id, equipment_id
`

type UpdateExerciseEquipmentByIdParams struct {
	ExerciseID  uuid.UUID `json:"exercise_id"`
	EquipmentID uuid.UUID `json:"equipment_id"`
	ID          uuid.UUID `json:"id"`
}

func (q *Queries) UpdateExerciseEquipmentById(ctx context.Context, arg UpdateExerciseEquipmentByIdParams) (ExerciseEquipment, error) {
	row := q.db.QueryRowContext(ctx, updateExerciseEquipmentById, arg.ExerciseID, arg.EquipmentID, arg.ID)
	var i ExerciseEquipment
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExerciseID,
		&i.EquipmentID,
	)
	return i, err
}
